// Generated by Haxe 4.1.5
#ifndef INCLUDED_CharacterSkinSubState
#define INCLUDED_CharacterSkinSubState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
HX_DECLARE_CLASS0(Alphabet)
HX_DECLARE_CLASS0(CharacterSkinSubState)
HX_DECLARE_CLASS0(HealthIcon)
HX_DECLARE_CLASS0(MusicBeatSubstate)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,_hx_system,FlxSound)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES CharacterSkinSubState_obj : public  ::MusicBeatSubstate_obj
{
	public:
		typedef  ::MusicBeatSubstate_obj super;
		typedef CharacterSkinSubState_obj OBJ_;
		CharacterSkinSubState_obj();

	public:
		enum { _hx_ClassId = 0x09847693 };

		void __construct(Float x,Float y,Float camX,Float camY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CharacterSkinSubState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CharacterSkinSubState"); }
		static ::hx::ObjectPtr< CharacterSkinSubState_obj > __new(Float x,Float y,Float camX,Float camY);
		static ::hx::ObjectPtr< CharacterSkinSubState_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,Float camX,Float camY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CharacterSkinSubState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CharacterSkinSubState",37,95,7e,3c); }

		static void __boot();
		static ::String songName;
		 ::flixel::group::FlxTypedGroup grpMenuShit;
		::Array< ::String > menuItems;
		::Array< ::String > menuItemsOG;
		::cpp::VirtualArray difficultyChoices;
		int curSelected;
		 ::flixel::FlxSprite pausebg;
		 ::flixel::FlxSprite pausebg1;
		 ::flixel::FlxSprite iconBG;
		 ::HealthIcon icon;
		 ::flixel::_hx_system::FlxSound pauseMusic;
		 ::flixel::text::FlxText practiceText;
		 ::flixel::text::FlxText skipTimeText;
		 ::Alphabet skipTimeTracker;
		Float curTime;
		Float holdTime;
		void update(Float elapsed);

		void destroy();

};


#endif /* INCLUDED_CharacterSkinSubState */ 
