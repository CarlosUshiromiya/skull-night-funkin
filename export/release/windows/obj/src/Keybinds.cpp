// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_ClientPrefs
#include <ClientPrefs.h>
#endif
#ifndef INCLUDED_Keybinds
#include <Keybinds.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_dca67d3397202e10_5_fill,"Keybinds","fill",0xf7d6141a,"Keybinds.fill","Keybinds.hx",5,0x21bd3ce7)

void Keybinds_obj::__construct() { }

Dynamic Keybinds_obj::__CreateEmpty() { return new Keybinds_obj; }

void *Keybinds_obj::_hx_vtable = 0;

Dynamic Keybinds_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Keybinds_obj > _hx_result = new Keybinds_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Keybinds_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4742bfbf;
}

::Array< ::Dynamic> Keybinds_obj::fill(){
            	HX_STACKFRAME(&_hx_pos_dca67d3397202e10_5_fill)
HXLINE(   6)		::cpp::VirtualArray _hx_tmp = ::cpp::VirtualArray_obj::__new(1)->init(0,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_one1",b8,75,23,a7))) )));
HXLINE(  10)		::Array< int > _hx_tmp1 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_two1",d2,63,78,aa))) ));
HXLINE(   9)		::cpp::VirtualArray _hx_tmp2 = ::cpp::VirtualArray_obj::__new(2)->init(0,_hx_tmp1)->init(1,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_two2",d3,63,78,aa))) )));
HXLINE(  14)		::Array< int > _hx_tmp3 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_three1",00,3a,57,e3))) ));
HXLINE(  15)		::Array< int > _hx_tmp4 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_three2",01,3a,57,e3))) ));
HXLINE(  13)		::cpp::VirtualArray _hx_tmp5 = ::cpp::VirtualArray_obj::__new(3)->init(0,_hx_tmp3)->init(1,_hx_tmp4)->init(2,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_three3",02,3a,57,e3))) )));
HXLINE(  19)		::Array< int > _hx_tmp6 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_left",b4,fe,20,a5))) ));
HXLINE(  20)		::Array< int > _hx_tmp7 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_down",0f,ef,de,9f))) ));
HXLINE(  21)		::Array< int > _hx_tmp8 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_up",c8,67,5c,4d))) ));
HXLINE(  18)		::cpp::VirtualArray _hx_tmp9 = ::cpp::VirtualArray_obj::__new(4)->init(0,_hx_tmp6)->init(1,_hx_tmp7)->init(2,_hx_tmp8)->init(3,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_right",8f,ec,ca,4e))) )));
HXLINE(  25)		::Array< int > _hx_tmp10 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_five1",72,55,07,66))) ));
HXLINE(  26)		::Array< int > _hx_tmp11 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_five2",73,55,07,66))) ));
HXLINE(  27)		::Array< int > _hx_tmp12 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_five3",74,55,07,66))) ));
HXLINE(  28)		::Array< int > _hx_tmp13 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_five4",75,55,07,66))) ));
HXLINE(  24)		::cpp::VirtualArray _hx_tmp14 = ::cpp::VirtualArray_obj::__new(5)->init(0,_hx_tmp10)->init(1,_hx_tmp11)->init(2,_hx_tmp12)->init(3,_hx_tmp13)->init(4,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_five5",76,55,07,66))) )));
HXLINE(  32)		::Array< int > _hx_tmp15 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six1",7c,95,c4,a9))) ));
HXLINE(  33)		::Array< int > _hx_tmp16 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six2",7d,95,c4,a9))) ));
HXLINE(  34)		::Array< int > _hx_tmp17 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six3",7e,95,c4,a9))) ));
HXLINE(  35)		::Array< int > _hx_tmp18 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six4",7f,95,c4,a9))) ));
HXLINE(  36)		::Array< int > _hx_tmp19 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six5",80,95,c4,a9))) ));
HXLINE(  31)		::cpp::VirtualArray _hx_tmp20 = ::cpp::VirtualArray_obj::__new(6)->init(0,_hx_tmp15)->init(1,_hx_tmp16)->init(2,_hx_tmp17)->init(3,_hx_tmp18)->init(4,_hx_tmp19)->init(5,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_six6",81,95,c4,a9))) )));
HXLINE(  40)		::Array< int > _hx_tmp21 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven1",71,02,6d,c5))) ));
HXLINE(  41)		::Array< int > _hx_tmp22 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven2",72,02,6d,c5))) ));
HXLINE(  42)		::Array< int > _hx_tmp23 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven3",73,02,6d,c5))) ));
HXLINE(  43)		::Array< int > _hx_tmp24 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven4",74,02,6d,c5))) ));
HXLINE(  44)		::Array< int > _hx_tmp25 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven5",75,02,6d,c5))) ));
HXLINE(  45)		::Array< int > _hx_tmp26 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven6",76,02,6d,c5))) ));
HXLINE(  39)		::cpp::VirtualArray _hx_tmp27 = ::cpp::VirtualArray_obj::__new(7)->init(0,_hx_tmp21)->init(1,_hx_tmp22)->init(2,_hx_tmp23)->init(3,_hx_tmp24)->init(4,_hx_tmp25)->init(5,_hx_tmp26)->init(6,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_seven7",77,02,6d,c5))) )));
HXLINE(  49)		::Array< int > _hx_tmp28 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight1",ef,5f,20,70))) ));
HXLINE(  50)		::Array< int > _hx_tmp29 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight2",f0,5f,20,70))) ));
HXLINE(  51)		::Array< int > _hx_tmp30 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight3",f1,5f,20,70))) ));
HXLINE(  52)		::Array< int > _hx_tmp31 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight4",f2,5f,20,70))) ));
HXLINE(  53)		::Array< int > _hx_tmp32 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight5",f3,5f,20,70))) ));
HXLINE(  54)		::Array< int > _hx_tmp33 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight6",f4,5f,20,70))) ));
HXLINE(  55)		::Array< int > _hx_tmp34 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight7",f5,5f,20,70))) ));
HXLINE(  48)		::cpp::VirtualArray _hx_tmp35 = ::cpp::VirtualArray_obj::__new(8)->init(0,_hx_tmp28)->init(1,_hx_tmp29)->init(2,_hx_tmp30)->init(3,_hx_tmp31)->init(4,_hx_tmp32)->init(5,_hx_tmp33)->init(6,_hx_tmp34)->init(7,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_eight8",f6,5f,20,70))) )));
HXLINE(  59)		::Array< int > _hx_tmp36 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine1",72,e7,35,01))) ));
HXLINE(  60)		::Array< int > _hx_tmp37 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine2",73,e7,35,01))) ));
HXLINE(  61)		::Array< int > _hx_tmp38 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine3",74,e7,35,01))) ));
HXLINE(  62)		::Array< int > _hx_tmp39 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine4",75,e7,35,01))) ));
HXLINE(  63)		::Array< int > _hx_tmp40 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine5",76,e7,35,01))) ));
HXLINE(  64)		::Array< int > _hx_tmp41 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine6",77,e7,35,01))) ));
HXLINE(  65)		::Array< int > _hx_tmp42 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine7",78,e7,35,01))) ));
HXLINE(  66)		::Array< int > _hx_tmp43 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine8",79,e7,35,01))) ));
HXLINE(  58)		::cpp::VirtualArray _hx_tmp44 = ::cpp::VirtualArray_obj::__new(9)->init(0,_hx_tmp36)->init(1,_hx_tmp37)->init(2,_hx_tmp38)->init(3,_hx_tmp39)->init(4,_hx_tmp40)->init(5,_hx_tmp41)->init(6,_hx_tmp42)->init(7,_hx_tmp43)->init(8,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_nine9",7a,e7,35,01))) )));
HXLINE(  70)		::Array< int > _hx_tmp45 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten1",61,ba,6a,aa))) ));
HXLINE(  71)		::Array< int > _hx_tmp46 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten2",62,ba,6a,aa))) ));
HXLINE(  72)		::Array< int > _hx_tmp47 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten3",63,ba,6a,aa))) ));
HXLINE(  73)		::Array< int > _hx_tmp48 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten4",64,ba,6a,aa))) ));
HXLINE(  74)		::Array< int > _hx_tmp49 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten5",65,ba,6a,aa))) ));
HXLINE(  75)		::Array< int > _hx_tmp50 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten6",66,ba,6a,aa))) ));
HXLINE(  76)		::Array< int > _hx_tmp51 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten7",67,ba,6a,aa))) ));
HXLINE(  77)		::Array< int > _hx_tmp52 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten8",68,ba,6a,aa))) ));
HXLINE(  78)		::Array< int > _hx_tmp53 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten9",69,ba,6a,aa))) ));
HXLINE(  69)		::cpp::VirtualArray _hx_tmp54 = ::cpp::VirtualArray_obj::__new(10)->init(0,_hx_tmp45)->init(1,_hx_tmp46)->init(2,_hx_tmp47)->init(3,_hx_tmp48)->init(4,_hx_tmp49)->init(5,_hx_tmp50)->init(6,_hx_tmp51)->init(7,_hx_tmp52)->init(8,_hx_tmp53)->init(9,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_ten10",af,5a,f8,72))) )));
HXLINE(  82)		::Array< int > _hx_tmp55 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev1",4c,8d,8f,d4))) ));
HXLINE(  83)		::Array< int > _hx_tmp56 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev2",4d,8d,8f,d4))) ));
HXLINE(  84)		::Array< int > _hx_tmp57 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev3",4e,8d,8f,d4))) ));
HXLINE(  85)		::Array< int > _hx_tmp58 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev4",4f,8d,8f,d4))) ));
HXLINE(  86)		::Array< int > _hx_tmp59 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev5",50,8d,8f,d4))) ));
HXLINE(  87)		::Array< int > _hx_tmp60 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev6",51,8d,8f,d4))) ));
HXLINE(  88)		::Array< int > _hx_tmp61 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev7",52,8d,8f,d4))) ));
HXLINE(  89)		::Array< int > _hx_tmp62 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev8",53,8d,8f,d4))) ));
HXLINE(  90)		::Array< int > _hx_tmp63 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev9",54,8d,8f,d4))) ));
HXLINE(  91)		::Array< int > _hx_tmp64 = ::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev10",64,15,0c,29))) ));
HXLINE(   5)		return ::Array_obj< ::Dynamic>::__new(11)->init(0,_hx_tmp)->init(1,_hx_tmp2)->init(2,_hx_tmp5)->init(3,_hx_tmp9)->init(4,_hx_tmp14)->init(5,_hx_tmp20)->init(6,_hx_tmp27)->init(7,_hx_tmp35)->init(8,_hx_tmp44)->init(9,_hx_tmp54)->init(10,::cpp::VirtualArray_obj::__new(11)->init(0,_hx_tmp55)->init(1,_hx_tmp56)->init(2,_hx_tmp57)->init(3,_hx_tmp58)->init(4,_hx_tmp59)->init(5,_hx_tmp60)->init(6,_hx_tmp61)->init(7,_hx_tmp62)->init(8,_hx_tmp63)->init(9,_hx_tmp64)->init(10,::ClientPrefs_obj::copyKey(( (::Array< int >)(::ClientPrefs_obj::keyBinds->get(HX_("note_elev11",65,15,0c,29))) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Keybinds_obj,fill,return )


Keybinds_obj::Keybinds_obj()
{
}

bool Keybinds_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"fill") ) { outValue = fill_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Keybinds_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Keybinds_obj_sStaticStorageInfo = 0;
#endif

::hx::Class Keybinds_obj::__mClass;

static ::String Keybinds_obj_sStaticFields[] = {
	HX_("fill",83,ce,bb,43),
	::String(null())
};

void Keybinds_obj::__register()
{
	Keybinds_obj _hx_dummy;
	Keybinds_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Keybinds",37,02,ee,3d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Keybinds_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Keybinds_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Keybinds_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Keybinds_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Keybinds_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

